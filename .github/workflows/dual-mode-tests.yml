name: Dual-Mode Selenium Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # ejecución manual

jobs:
  # ==================================
  # JOB AUTOMÁTICO: Parallel Scenarios (Chrome)
  # ==================================
  parallel_tests:
    name: 🧩 Parallel Scenarios (Chrome)
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'

    env:
      EXECUTION_MODE: PARALLEL
      BROWSERS: chrome
      HEADLESS: true

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - uses: browser-actions/setup-chrome@v1

      - name: Build & Test (Parallel Mode)
        run: |
          dotnet restore SpecFlowSelenium.sln
          dotnet build SpecFlowSelenium.sln --configuration Release --no-restore
          dotnet test SpecFlowSelenium.sln --configuration Release --no-build --logger "trx;LogFileName=test_results.trx"

      - name: Publish Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults-Parallel
          path: '**/TestResults/*.trx'


  # ==================================
  # JOB MANUAL: Cross-Browser MultiDriver
  # ==================================
  multi_tests:
    name: 🌐 Cross-Browser MultiDriver
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    env:
      EXECUTION_MODE: MULTI
      BROWSERS: chrome,firefox,edge
      HEADLESS: true

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - uses: browser-actions/setup-chrome@v1
      - uses: browser-actions/setup-firefox@v1
      - uses: browser-actions/setup-edge@v1

      - name: Build & Test (Multi-Browser)
        run: |
          dotnet restore SpecFlowSelenium.sln
          dotnet build SpecFlowSelenium.sln --configuration Release --no-restore
          dotnet test SpecFlowSelenium.sln --configuration Release --no-build --logger "trx;LogFileName=test_results.trx"

      - name: Publish Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults-Multi
          path: '**/TestResults/*.trx'

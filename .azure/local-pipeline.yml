# ================================================
# Dual-Mode SpecFlow CI (Self-hosted Agent)
# ================================================
# 🧠 Ejecuta pruebas SpecFlow + Selenium localmente
#  - Usa el agente local (Windows)
#  - Puedes elegir modo PARALLEL o MULTI (manual)
# ================================================

trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

parameters:
  - name: mode
    displayName: "Execution Mode"
    type: string
    default: "PARALLEL"
    values:
      - PARALLEL
      - MULTI

variables:
  DOTNET_VERSION: '8.0.x'
  HEADLESS: 'true'

# ================================================
# 🧩 JOB 1 - Parallel Scenarios (Chrome)
# ================================================
jobs:
- job: Parallel_Tests
  displayName: "🧩 Parallel Scenarios (Chrome)"
  condition: or(ne(variables['Build.Reason'], 'Manual'), eq('${{ parameters.mode }}', 'PARALLEL'))
  pool:
    name: 'Default' # Agente local

  variables:
    EXECUTION_MODE: 'PARALLEL'
    BROWSERS: 'chrome'

  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '$(DOTNET_VERSION)'

  - script: |
      echo "Compilando y ejecutando pruebas en modo PARALLEL (Chrome)"
      dotnet restore SpecFlowSelenium.sln
      dotnet build SpecFlowSelenium.sln --configuration Release --no-restore
      dotnet test SpecFlowSelenium.sln --configuration Release --no-build --logger "trx;LogFileName=chrome_results.trx"
    displayName: 'Compilar y probar (Chrome)'

  - task: PublishTestResults@2
    condition: always()
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/chrome_results.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Parallel Chrome Tests'

# ================================================
# 🌐 JOB 2 - Cross-Browser MultiDriver (manual)
# ================================================
- job: Multi_Tests
  displayName: "🌐 Cross-Browser MultiDriver"
  condition: eq('${{ parameters.mode }}', 'MULTI')
  pool:
    name: 'Default'

  variables:
    EXECUTION_MODE: 'MULTI'
    BROWSERS: 'chrome,firefox,edge'

  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '$(DOTNET_VERSION)'

  - script: |
      echo "Ejecutando pruebas MULTI (Chrome, Firefox, Edge)"
      dotnet restore SpecFlowSelenium.sln
      dotnet build SpecFlowSelenium.sln --configuration Release --no-restore
      dotnet test SpecFlowSelenium.sln --configuration Release --no-build --logger "trx;LogFileName=multi_results.trx"
    displayName: 'Compilar y probar (Multi-Browser)'

  - task: PublishTestResults@2
    condition: always()
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/multi_results.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Cross-Browser MultiDriver Tests'
